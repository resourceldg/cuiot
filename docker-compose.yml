version: '3.8'

services:
  # Base de datos PostgreSQL para desarrollo
  postgres:
    image: postgres:15-alpine
    container_name: viejos_trapos_postgres
    environment:
      POSTGRES_DB: viejos_trapos_db
      POSTGRES_USER: viejos_trapos_user
      POSTGRES_PASSWORD: viejos_trapos_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - viejos_trapos_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U viejos_trapos_user -d viejos_trapos_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Base de datos PostgreSQL para testing
  postgres_test:
    image: postgres:15-alpine
    container_name: viejos_trapos_postgres_test
    environment:
      POSTGRES_DB: viejos_trapos_test_db
      POSTGRES_USER: viejos_trapos_user
      POSTGRES_PASSWORD: viejos_trapos_pass
    ports:
      - "5433:5432" # Puerto diferente para evitar conflictos
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    networks:
      - viejos_trapos_network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U viejos_trapos_user -d viejos_trapos_test_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis para cache y sesiones
  redis:
    image: redis:7-alpine
    container_name: viejos_trapos_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - viejos_trapos_network

  # Servicio de migraci√≥n (se ejecuta una vez y termina)
  migrations:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: viejos_trapos_migrations
    environment:
      - DATABASE_URL=postgresql://viejos_trapos_user:viejos_trapos_pass@postgres:5432/viejos_trapos_db
      - TEST_DATABASE_URL=postgresql://viejos_trapos_user:viejos_trapos_pass@postgres_test:5432/viejos_trapos_test_db
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      postgres_test:
        condition: service_healthy
    networks:
      - viejos_trapos_network
    command: [ "python", "-m", "app.scripts.init_db" ]
    profiles:
      - migrate

  # Backend FastAPI
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: viejos_trapos_backend
    environment:
      - DATABASE_URL=postgresql://viejos_trapos_user:viejos_trapos_pass@postgres:5432/viejos_trapos_db
      - TEST_DATABASE_URL=postgresql://viejos_trapos_user:viejos_trapos_pass@postgres_test:5432/viejos_trapos_test_db
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=viejos_trapos_secret_key_dev
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
      postgres_test:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - viejos_trapos_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Panel Web Svelte
  web-panel-new:
    build:
      context: ./web-panel-new
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./web-panel-new:/app
    environment:
      - NODE_ENV=development

  # MQTT Broker para IoT
  mqtt:
    image: eclipse-mosquitto:2.0
    container_name: viejos_trapos_mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./docker/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./docker/mosquitto/passwd:/mosquitto/config/passwd
      - mqtt_data:/mosquitto/data
      - mqtt_logs:/mosquitto/log
    networks:
      - viejos_trapos_network

  # Adminer para gestionar PostgreSQL
  adminer:
    image: adminer:latest
    container_name: viejos_trapos_adminer
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - viejos_trapos_network

volumes:
  postgres_data:
  postgres_test_data:
  redis_data:
  mqtt_data:
  mqtt_logs:


networks:
  viejos_trapos_network:
    driver: bridge
