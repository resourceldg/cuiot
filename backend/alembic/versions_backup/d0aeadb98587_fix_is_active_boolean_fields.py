"""fix_is_active_boolean_fields

Revision ID: d0aeadb98587
Revises: ec5244936ce1
Create Date: 2025-07-01 18:04:29.093212

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd0aeadb98587'
down_revision: Union[str, None] = 'ec5244936ce1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('institutions',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('institution_type', sa.String(length=50), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('website', sa.String(length=200), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('tax_id', sa.String(length=50), nullable=True),
    sa.Column('license_number', sa.String(length=50), nullable=True),
    sa.Column('capacity', sa.Integer(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_institutions_id'), 'institutions', ['id'], unique=False)
    op.create_index(op.f('ix_institutions_institution_type'), 'institutions', ['institution_type'], unique=False)
    op.create_index(op.f('ix_institutions_name'), 'institutions', ['name'], unique=False)
    op.create_table('package_add_ons',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('add_on_type', sa.String(length=50), nullable=False),
    sa.Column('price_monthly', sa.Integer(), nullable=False),
    sa.Column('price_yearly', sa.Integer(), nullable=True),
    sa.Column('configuration', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('limitations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('compatible_packages', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('max_quantity', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_package_add_ons_add_on_type'), 'package_add_ons', ['add_on_type'], unique=False)
    op.create_index(op.f('ix_package_add_ons_id'), 'package_add_ons', ['id'], unique=False)
    op.create_index(op.f('ix_package_add_ons_name'), 'package_add_ons', ['name'], unique=False)
    op.create_table('packages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('package_type', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price_monthly', sa.Integer(), nullable=False),
    sa.Column('price_yearly', sa.Integer(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('max_users', sa.Integer(), nullable=True),
    sa.Column('max_devices', sa.Integer(), nullable=True),
    sa.Column('max_storage_gb', sa.Integer(), nullable=True),
    sa.Column('features', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('limitations', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('customizable_options', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('add_ons_available', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('base_configuration', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_customizable', sa.Boolean(), nullable=False),
    sa.Column('support_level', sa.String(length=50), nullable=True),
    sa.Column('response_time_hours', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_featured', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_packages_id'), 'packages', ['id'], unique=False)
    op.create_index(op.f('ix_packages_name'), 'packages', ['name'], unique=False)
    op.create_index(op.f('ix_packages_package_type'), 'packages', ['package_type'], unique=False)
    op.create_table('referrals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('referral_code', sa.String(length=20), nullable=False),
    sa.Column('referrer_type', sa.String(length=20), nullable=False),
    sa.Column('referrer_id', sa.UUID(), nullable=False),
    sa.Column('referred_email', sa.String(length=100), nullable=False),
    sa.Column('referred_name', sa.String(length=100), nullable=True),
    sa.Column('referred_phone', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('registered_at', sa.DateTime(), nullable=True),
    sa.Column('converted_at', sa.DateTime(), nullable=True),
    sa.Column('expired_at', sa.DateTime(), nullable=True),
    sa.Column('commission_amount', sa.Float(), nullable=True),
    sa.Column('commission_paid', sa.Boolean(), nullable=True),
    sa.Column('commission_paid_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_referrals_id'), 'referrals', ['id'], unique=False)
    op.create_index(op.f('ix_referrals_referral_code'), 'referrals', ['referral_code'], unique=True)
    op.create_table('roles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('permissions', sa.Text(), nullable=True),
    sa.Column('is_system', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=True)
    op.create_table('emergency_protocols',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('protocol_type', sa.String(length=50), nullable=False),
    sa.Column('crisis_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('steps', sa.Text(), nullable=True),
    sa.Column('contacts', sa.Text(), nullable=True),
    sa.Column('trigger_conditions', sa.Text(), nullable=True),
    sa.Column('severity_threshold', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_emergency_protocols_crisis_type'), 'emergency_protocols', ['crisis_type'], unique=False)
    op.create_index(op.f('ix_emergency_protocols_id'), 'emergency_protocols', ['id'], unique=False)
    op.create_index(op.f('ix_emergency_protocols_name'), 'emergency_protocols', ['name'], unique=False)
    op.create_index(op.f('ix_emergency_protocols_protocol_type'), 'emergency_protocols', ['protocol_type'], unique=False)
    op.create_table('institution_scores',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=False),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('service_score', sa.Float(), nullable=True),
    sa.Column('infrastructure_score', sa.Float(), nullable=True),
    sa.Column('compliance_score', sa.Float(), nullable=True),
    sa.Column('reputation_score', sa.Float(), nullable=True),
    sa.Column('total_reviews', sa.Integer(), nullable=False),
    sa.Column('total_recommendations', sa.Integer(), nullable=False),
    sa.Column('total_patients', sa.Integer(), nullable=False),
    sa.Column('years_operating', sa.Integer(), nullable=True),
    sa.Column('staff_ratio', sa.Float(), nullable=True),
    sa.Column('response_time', sa.Integer(), nullable=True),
    sa.Column('safety_incidents', sa.Integer(), nullable=False),
    sa.Column('satisfaction_rate', sa.Float(), nullable=True),
    sa.Column('has_medical_license', sa.Boolean(), nullable=False),
    sa.Column('has_safety_certification', sa.Boolean(), nullable=False),
    sa.Column('has_quality_certification', sa.Boolean(), nullable=False),
    sa.Column('last_inspection_date', sa.Date(), nullable=True),
    sa.Column('inspection_score', sa.Float(), nullable=True),
    sa.Column('last_calculated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_review', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_institution_scores_id'), 'institution_scores', ['id'], unique=False)
    op.create_index(op.f('ix_institution_scores_institution_id'), 'institution_scores', ['institution_id'], unique=False)
    op.create_table('referral_commissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('referral_id', sa.UUID(), nullable=False),
    sa.Column('recipient_type', sa.String(length=20), nullable=False),
    sa.Column('recipient_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('commission_type', sa.String(length=20), nullable=False),
    sa.Column('percentage', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['referral_id'], ['referrals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_referral_commissions_id'), 'referral_commissions', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=True),
    sa.Column('password_hash', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('date_of_birth', sa.DateTime(), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('professional_license', sa.String(length=50), nullable=True),
    sa.Column('specialization', sa.String(length=100), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('is_freelance', sa.Boolean(), nullable=False),
    sa.Column('hourly_rate', sa.Integer(), nullable=True),
    sa.Column('availability', sa.Text(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('cared_persons',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(length=20), nullable=True),
    sa.Column('identification_number', sa.String(length=50), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('email', sa.String(length=100), nullable=True),
    sa.Column('emergency_contact', sa.String(length=100), nullable=True),
    sa.Column('emergency_phone', sa.String(length=20), nullable=True),
    sa.Column('medical_conditions', sa.Text(), nullable=True),
    sa.Column('medications', sa.Text(), nullable=True),
    sa.Column('allergies', sa.Text(), nullable=True),
    sa.Column('blood_type', sa.String(length=10), nullable=True),
    sa.Column('care_type', sa.String(length=20), nullable=False),
    sa.Column('care_level', sa.String(length=50), nullable=True),
    sa.Column('special_needs', sa.Text(), nullable=True),
    sa.Column('mobility_level', sa.String(length=50), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('medical_contact_name', sa.String(length=100), nullable=True),
    sa.Column('medical_contact_phone', sa.String(length=20), nullable=True),
    sa.Column('family_contact_name', sa.String(length=100), nullable=True),
    sa.Column('family_contact_phone', sa.String(length=20), nullable=True),
    sa.Column('medical_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('identification_number')
    )
    op.create_index(op.f('ix_cared_persons_id'), 'cared_persons', ['id'], unique=False)
    op.create_table('caregiver_institutions',
    sa.Column('caregiver_id', sa.UUID(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=False),
    sa.Column('contract_type', sa.String(length=50), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('position', sa.String(length=100), nullable=True),
    sa.Column('department', sa.String(length=100), nullable=True),
    sa.Column('work_schedule', sa.Text(), nullable=True),
    sa.Column('hourly_rate', sa.Integer(), nullable=True),
    sa.Column('salary', sa.Integer(), nullable=True),
    sa.Column('benefits', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('hired_by', sa.UUID(), nullable=True),
    sa.Column('hired_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['caregiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['hired_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_caregiver_institutions_caregiver_id'), 'caregiver_institutions', ['caregiver_id'], unique=False)
    op.create_index(op.f('ix_caregiver_institutions_id'), 'caregiver_institutions', ['id'], unique=False)
    op.create_index(op.f('ix_caregiver_institutions_institution_id'), 'caregiver_institutions', ['institution_id'], unique=False)
    op.create_table('caregiver_scores',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('caregiver_id', sa.UUID(), nullable=False),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('experience_score', sa.Float(), nullable=True),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('reliability_score', sa.Float(), nullable=True),
    sa.Column('availability_score', sa.Float(), nullable=True),
    sa.Column('total_reviews', sa.Integer(), nullable=False),
    sa.Column('total_recommendations', sa.Integer(), nullable=False),
    sa.Column('total_services', sa.Integer(), nullable=False),
    sa.Column('total_hours', sa.Integer(), nullable=False),
    sa.Column('avg_response_time', sa.Integer(), nullable=True),
    sa.Column('punctuality_rate', sa.Float(), nullable=True),
    sa.Column('completion_rate', sa.Float(), nullable=True),
    sa.Column('is_identity_verified', sa.Boolean(), nullable=False),
    sa.Column('is_background_checked', sa.Boolean(), nullable=False),
    sa.Column('is_references_verified', sa.Boolean(), nullable=False),
    sa.Column('last_calculated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_review', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['caregiver_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_caregiver_scores_caregiver_id'), 'caregiver_scores', ['caregiver_id'], unique=False)
    op.create_index(op.f('ix_caregiver_scores_id'), 'caregiver_scores', ['id'], unique=False)
    op.create_table('service_subscriptions',
    sa.Column('subscription_type', sa.String(length=50), nullable=False),
    sa.Column('service_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('features', sa.Text(), nullable=True),
    sa.Column('limitations', sa.Text(), nullable=True),
    sa.Column('price_per_month', sa.Integer(), nullable=True),
    sa.Column('price_per_year', sa.Integer(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('auto_renew', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_subscriptions_id'), 'service_subscriptions', ['id'], unique=False)
    op.create_index(op.f('ix_service_subscriptions_service_name'), 'service_subscriptions', ['service_name'], unique=False)
    op.create_index(op.f('ix_service_subscriptions_subscription_type'), 'service_subscriptions', ['subscription_type'], unique=False)
    op.create_table('user_packages',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('package_id', sa.UUID(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('auto_renew', sa.Boolean(), nullable=False),
    sa.Column('billing_cycle', sa.String(length=20), nullable=False),
    sa.Column('current_amount', sa.Integer(), nullable=False),
    sa.Column('next_billing_date', sa.Date(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('custom_configuration', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('selected_features', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('custom_limits', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('legal_capacity_verified', sa.Boolean(), nullable=False),
    sa.Column('legal_representative_id', sa.UUID(), nullable=True),
    sa.Column('verification_date', sa.DateTime(), nullable=True),
    sa.Column('referral_code_used', sa.String(length=20), nullable=True),
    sa.Column('referral_commission_applied', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['legal_representative_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['package_id'], ['packages.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_packages_id'), 'user_packages', ['id'], unique=False)
    op.create_table('user_roles',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('role_id', sa.UUID(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('assigned_by', sa.UUID(), nullable=True),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_roles_id'), 'user_roles', ['id'], unique=False)
    op.create_index(op.f('ix_user_roles_role_id'), 'user_roles', ['role_id'], unique=False)
    op.create_index(op.f('ix_user_roles_user_id'), 'user_roles', ['user_id'], unique=False)
    op.create_table('billing_records',
    sa.Column('invoice_number', sa.String(length=50), nullable=False),
    sa.Column('billing_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('tax_amount', sa.Integer(), nullable=False),
    sa.Column('total_amount', sa.Integer(), nullable=False),
    sa.Column('billing_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('paid_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('transaction_id', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('service_subscription_id', sa.Integer(), nullable=True),
    sa.Column('user_package_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['service_subscription_id'], ['service_subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_package_id'], ['user_packages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_billing_records_billing_type'), 'billing_records', ['billing_type'], unique=False)
    op.create_index(op.f('ix_billing_records_id'), 'billing_records', ['id'], unique=False)
    op.create_index(op.f('ix_billing_records_invoice_number'), 'billing_records', ['invoice_number'], unique=True)
    op.create_table('cared_person_institutions',
    sa.Column('cared_person_id', sa.UUID(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=False),
    sa.Column('service_type', sa.String(length=50), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('schedule', sa.Text(), nullable=True),
    sa.Column('frequency', sa.String(length=50), nullable=True),
    sa.Column('duration_hours', sa.Float(), nullable=True),
    sa.Column('cost_per_session', sa.Integer(), nullable=True),
    sa.Column('payment_frequency', sa.String(length=50), nullable=True),
    sa.Column('insurance_coverage', sa.Boolean(), nullable=False),
    sa.Column('insurance_provider', sa.String(length=100), nullable=True),
    sa.Column('primary_doctor', sa.String(length=100), nullable=True),
    sa.Column('medical_notes', sa.Text(), nullable=True),
    sa.Column('treatment_plan', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('registered_by', sa.UUID(), nullable=True),
    sa.Column('registered_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['registered_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cared_person_institutions_cared_person_id'), 'cared_person_institutions', ['cared_person_id'], unique=False)
    op.create_index(op.f('ix_cared_person_institutions_id'), 'cared_person_institutions', ['id'], unique=False)
    op.create_index(op.f('ix_cared_person_institutions_institution_id'), 'cared_person_institutions', ['institution_id'], unique=False)
    op.create_table('caregiver_assignments',
    sa.Column('caregiver_id', sa.UUID(), nullable=False),
    sa.Column('cared_person_id', sa.UUID(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('schedule', sa.Text(), nullable=True),
    sa.Column('assignment_type', sa.String(length=50), nullable=False),
    sa.Column('responsibilities', sa.Text(), nullable=True),
    sa.Column('special_requirements', sa.Text(), nullable=True),
    sa.Column('hourly_rate', sa.Integer(), nullable=True),
    sa.Column('payment_frequency', sa.String(length=50), nullable=True),
    sa.Column('is_insured', sa.Boolean(), nullable=False),
    sa.Column('insurance_provider', sa.String(length=100), nullable=True),
    sa.Column('client_rating', sa.Integer(), nullable=True),
    sa.Column('client_feedback', sa.Text(), nullable=True),
    sa.Column('caregiver_self_rating', sa.Integer(), nullable=True),
    sa.Column('caregiver_notes', sa.Text(), nullable=True),
    sa.Column('primary_doctor', sa.String(length=100), nullable=True),
    sa.Column('medical_contact', sa.String(length=100), nullable=True),
    sa.Column('emergency_protocol', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('assigned_by', sa.UUID(), nullable=True),
    sa.Column('assigned_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assigned_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['caregiver_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_caregiver_assignments_cared_person_id'), 'caregiver_assignments', ['cared_person_id'], unique=False)
    op.create_index(op.f('ix_caregiver_assignments_caregiver_id'), 'caregiver_assignments', ['caregiver_id'], unique=False)
    op.create_index(op.f('ix_caregiver_assignments_id'), 'caregiver_assignments', ['id'], unique=False)
    op.create_table('caregiver_reviews',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('caregiver_id', sa.UUID(), nullable=False),
    sa.Column('reviewer_id', sa.UUID(), nullable=False),
    sa.Column('cared_person_id', sa.UUID(), nullable=True),
    sa.Column('caregiver_score_id', sa.UUID(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('categories', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_recommended', sa.Boolean(), nullable=False),
    sa.Column('service_date', sa.Date(), nullable=True),
    sa.Column('service_hours', sa.Float(), nullable=True),
    sa.Column('service_type', sa.String(length=50), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['caregiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['caregiver_score_id'], ['caregiver_scores.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_caregiver_reviews_cared_person_id'), 'caregiver_reviews', ['cared_person_id'], unique=False)
    op.create_index(op.f('ix_caregiver_reviews_caregiver_id'), 'caregiver_reviews', ['caregiver_id'], unique=False)
    op.create_index(op.f('ix_caregiver_reviews_caregiver_score_id'), 'caregiver_reviews', ['caregiver_score_id'], unique=False)
    op.create_index(op.f('ix_caregiver_reviews_id'), 'caregiver_reviews', ['id'], unique=False)
    op.create_index(op.f('ix_caregiver_reviews_reviewer_id'), 'caregiver_reviews', ['reviewer_id'], unique=False)
    op.create_table('devices',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('device_id', sa.String(length=100), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('type', sa.String(length=50), nullable=False),
    sa.Column('location', sa.String(length=255), nullable=True),
    sa.Column('device_type', sa.String(length=50), nullable=True),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('manufacturer', sa.String(length=100), nullable=True),
    sa.Column('serial_number', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('battery_level', sa.Integer(), nullable=True),
    sa.Column('signal_strength', sa.Integer(), nullable=True),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=True),
    sa.Column('location_description', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('altitude', sa.Float(), nullable=True),
    sa.Column('settings', sa.Text(), nullable=True),
    sa.Column('firmware_version', sa.String(length=50), nullable=True),
    sa.Column('hardware_version', sa.String(length=50), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('cared_person_id', sa.UUID(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('serial_number')
    )
    op.create_index(op.f('ix_devices_device_id'), 'devices', ['device_id'], unique=True)
    op.create_index(op.f('ix_devices_device_type'), 'devices', ['device_type'], unique=False)
    op.create_index(op.f('ix_devices_id'), 'devices', ['id'], unique=False)
    op.create_table('diagnoses',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cared_person_id', sa.UUID(), nullable=False),
    sa.Column('diagnosis_text', sa.Text(), nullable=False),
    sa.Column('diagnosis_type', sa.String(length=50), nullable=False),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('attachments', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_diagnoses_id'), 'diagnoses', ['id'], unique=False)
    op.create_table('geofences',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('geofence_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('center_latitude', sa.Float(), nullable=False),
    sa.Column('center_longitude', sa.Float(), nullable=False),
    sa.Column('radius', sa.Float(), nullable=True),
    sa.Column('polygon_coordinates', sa.Text(), nullable=True),
    sa.Column('trigger_action', sa.String(length=50), nullable=False),
    sa.Column('alert_message', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('days_of_week', sa.String(length=50), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('cared_person_id', sa.UUID(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_geofences_geofence_type'), 'geofences', ['geofence_type'], unique=False)
    op.create_index(op.f('ix_geofences_id'), 'geofences', ['id'], unique=False)
    op.create_index(op.f('ix_geofences_name'), 'geofences', ['name'], unique=False)
    op.create_table('institution_reviews',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=False),
    sa.Column('reviewer_id', sa.UUID(), nullable=False),
    sa.Column('cared_person_id', sa.UUID(), nullable=True),
    sa.Column('institution_score_id', sa.UUID(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('categories', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_recommended', sa.Boolean(), nullable=False),
    sa.Column('service_date', sa.Date(), nullable=True),
    sa.Column('service_type', sa.String(length=50), nullable=True),
    sa.Column('length_of_stay', sa.Integer(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['institution_score_id'], ['institution_scores.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_institution_reviews_cared_person_id'), 'institution_reviews', ['cared_person_id'], unique=False)
    op.create_index(op.f('ix_institution_reviews_id'), 'institution_reviews', ['id'], unique=False)
    op.create_index(op.f('ix_institution_reviews_institution_id'), 'institution_reviews', ['institution_id'], unique=False)
    op.create_index(op.f('ix_institution_reviews_institution_score_id'), 'institution_reviews', ['institution_score_id'], unique=False)
    op.create_index(op.f('ix_institution_reviews_reviewer_id'), 'institution_reviews', ['reviewer_id'], unique=False)
    op.create_table('medical_profiles',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cared_person_id', sa.UUID(), nullable=False),
    sa.Column('blood_type', sa.String(length=10), nullable=True),
    sa.Column('allergies', sa.Text(), nullable=True),
    sa.Column('chronic_conditions', sa.Text(), nullable=True),
    sa.Column('emergency_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('medical_preferences', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('insurance_info', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cared_person_id')
    )
    op.create_index(op.f('ix_medical_profiles_id'), 'medical_profiles', ['id'], unique=False)
    op.create_table('medication_schedules',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('cared_person_id', sa.UUID(), nullable=False),
    sa.Column('medication_name', sa.String(length=200), nullable=False),
    sa.Column('dosage', sa.String(length=100), nullable=False),
    sa.Column('frequency', sa.String(length=100), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('prescribed_by', sa.UUID(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('schedule_details', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['prescribed_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_medication_schedules_id'), 'medication_schedules', ['id'], unique=False)
    op.create_table('reminders',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('reminder_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('scheduled_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('repeat_pattern', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_by', sa.UUID(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('is_important', sa.Boolean(), nullable=False),
    sa.Column('reminder_data', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('cared_person_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['completed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reminders_id'), 'reminders', ['id'], unique=False)
    op.create_index(op.f('ix_reminders_reminder_type'), 'reminders', ['reminder_type'], unique=False)
    op.create_table('reports',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('report_type', sa.String(length=50), nullable=False),
    sa.Column('attached_files', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('cared_person_id', sa.UUID(), nullable=True),
    sa.Column('created_by_id', sa.UUID(), nullable=False),
    sa.Column('is_autocuidado', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reports_id'), 'reports', ['id'], unique=False)
    op.create_table('user_package_add_ons',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_package_id', sa.UUID(), nullable=False),
    sa.Column('add_on_id', sa.UUID(), nullable=False),
    sa.Column('quantity', sa.Integer(), nullable=False),
    sa.Column('custom_configuration', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('current_amount', sa.Integer(), nullable=False),
    sa.Column('billing_cycle', sa.String(length=20), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('added_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['add_on_id'], ['package_add_ons.id'], ),
    sa.ForeignKeyConstraint(['user_package_id'], ['user_packages.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_package_add_ons_id'), 'user_package_add_ons', ['id'], unique=False)
    op.create_table('debug_events',
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('event_subtype', sa.String(length=50), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('event_data', sa.Text(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('stack_trace', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('test_session', sa.String(length=100), nullable=True),
    sa.Column('environment', sa.String(length=50), nullable=True),
    sa.Column('event_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('cared_person_id', sa.UUID(), nullable=True),
    sa.Column('device_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_debug_events_event_subtype'), 'debug_events', ['event_subtype'], unique=False)
    op.create_index(op.f('ix_debug_events_event_type'), 'debug_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_debug_events_id'), 'debug_events', ['id'], unique=False)
    op.create_table('device_configs',
    sa.Column('device_id', sa.UUID(), nullable=False),
    sa.Column('config_type', sa.String(length=50), nullable=False),
    sa.Column('config_name', sa.String(length=100), nullable=False),
    sa.Column('config_data', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('applied_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('applied_by', sa.UUID(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['applied_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_configs_config_type'), 'device_configs', ['config_type'], unique=False)
    op.create_index(op.f('ix_device_configs_device_id'), 'device_configs', ['device_id'], unique=False)
    op.create_index(op.f('ix_device_configs_id'), 'device_configs', ['id'], unique=False)
    op.create_table('events',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('event_subtype', sa.String(length=50), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('event_data', sa.Text(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('altitude', sa.Float(), nullable=True),
    sa.Column('event_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('cared_person_id', sa.UUID(), nullable=True),
    sa.Column('device_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_event_subtype'), 'events', ['event_subtype'], unique=False)
    op.create_index(op.f('ix_events_event_type'), 'events', ['event_type'], unique=False)
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.create_table('location_tracking',
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('altitude', sa.Float(), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('heading', sa.Float(), nullable=True),
    sa.Column('location_name', sa.String(length=200), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('place_type', sa.String(length=50), nullable=True),
    sa.Column('tracking_method', sa.String(length=50), nullable=True),
    sa.Column('battery_level', sa.Integer(), nullable=True),
    sa.Column('signal_strength', sa.Integer(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('received_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('cared_person_id', sa.UUID(), nullable=True),
    sa.Column('device_id', sa.UUID(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_tracking_id'), 'location_tracking', ['id'], unique=False)
    op.create_table('medication_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('medication_schedule_id', sa.UUID(), nullable=False),
    sa.Column('taken_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('confirmed_by', sa.UUID(), nullable=True),
    sa.Column('confirmation_method', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('attachment', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_missed', sa.Boolean(), nullable=True),
    sa.Column('side_effects', sa.Text(), nullable=True),
    sa.Column('effectiveness_rating', sa.String(length=20), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['confirmed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['medication_schedule_id'], ['medication_schedules.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_medication_logs_id'), 'medication_logs', ['id'], unique=False)
    op.create_table('alerts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('alert_subtype', sa.String(length=50), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('alert_data', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('acknowledged_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('escalation_level', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('cared_person_id', sa.UUID(), nullable=True),
    sa.Column('device_id', sa.UUID(), nullable=True),
    sa.Column('event_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alerts_alert_subtype'), 'alerts', ['alert_subtype'], unique=False)
    op.create_index(op.f('ix_alerts_alert_type'), 'alerts', ['alert_type'], unique=False)
    op.create_index(op.f('ix_alerts_id'), 'alerts', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_alerts_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_alert_type'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_alert_subtype'), table_name='alerts')
    op.drop_table('alerts')
    op.drop_index(op.f('ix_medication_logs_id'), table_name='medication_logs')
    op.drop_table('medication_logs')
    op.drop_index(op.f('ix_location_tracking_id'), table_name='location_tracking')
    op.drop_table('location_tracking')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_index(op.f('ix_events_event_type'), table_name='events')
    op.drop_index(op.f('ix_events_event_subtype'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_device_configs_id'), table_name='device_configs')
    op.drop_index(op.f('ix_device_configs_device_id'), table_name='device_configs')
    op.drop_index(op.f('ix_device_configs_config_type'), table_name='device_configs')
    op.drop_table('device_configs')
    op.drop_index(op.f('ix_debug_events_id'), table_name='debug_events')
    op.drop_index(op.f('ix_debug_events_event_type'), table_name='debug_events')
    op.drop_index(op.f('ix_debug_events_event_subtype'), table_name='debug_events')
    op.drop_table('debug_events')
    op.drop_index(op.f('ix_user_package_add_ons_id'), table_name='user_package_add_ons')
    op.drop_table('user_package_add_ons')
    op.drop_index(op.f('ix_reports_id'), table_name='reports')
    op.drop_table('reports')
    op.drop_index(op.f('ix_reminders_reminder_type'), table_name='reminders')
    op.drop_index(op.f('ix_reminders_id'), table_name='reminders')
    op.drop_table('reminders')
    op.drop_index(op.f('ix_medication_schedules_id'), table_name='medication_schedules')
    op.drop_table('medication_schedules')
    op.drop_index(op.f('ix_medical_profiles_id'), table_name='medical_profiles')
    op.drop_table('medical_profiles')
    op.drop_index(op.f('ix_institution_reviews_reviewer_id'), table_name='institution_reviews')
    op.drop_index(op.f('ix_institution_reviews_institution_score_id'), table_name='institution_reviews')
    op.drop_index(op.f('ix_institution_reviews_institution_id'), table_name='institution_reviews')
    op.drop_index(op.f('ix_institution_reviews_id'), table_name='institution_reviews')
    op.drop_index(op.f('ix_institution_reviews_cared_person_id'), table_name='institution_reviews')
    op.drop_table('institution_reviews')
    op.drop_index(op.f('ix_geofences_name'), table_name='geofences')
    op.drop_index(op.f('ix_geofences_id'), table_name='geofences')
    op.drop_index(op.f('ix_geofences_geofence_type'), table_name='geofences')
    op.drop_table('geofences')
    op.drop_index(op.f('ix_diagnoses_id'), table_name='diagnoses')
    op.drop_table('diagnoses')
    op.drop_index(op.f('ix_devices_id'), table_name='devices')
    op.drop_index(op.f('ix_devices_device_type'), table_name='devices')
    op.drop_index(op.f('ix_devices_device_id'), table_name='devices')
    op.drop_table('devices')
    op.drop_index(op.f('ix_caregiver_reviews_reviewer_id'), table_name='caregiver_reviews')
    op.drop_index(op.f('ix_caregiver_reviews_id'), table_name='caregiver_reviews')
    op.drop_index(op.f('ix_caregiver_reviews_caregiver_score_id'), table_name='caregiver_reviews')
    op.drop_index(op.f('ix_caregiver_reviews_caregiver_id'), table_name='caregiver_reviews')
    op.drop_index(op.f('ix_caregiver_reviews_cared_person_id'), table_name='caregiver_reviews')
    op.drop_table('caregiver_reviews')
    op.drop_index(op.f('ix_caregiver_assignments_id'), table_name='caregiver_assignments')
    op.drop_index(op.f('ix_caregiver_assignments_caregiver_id'), table_name='caregiver_assignments')
    op.drop_index(op.f('ix_caregiver_assignments_cared_person_id'), table_name='caregiver_assignments')
    op.drop_table('caregiver_assignments')
    op.drop_index(op.f('ix_cared_person_institutions_institution_id'), table_name='cared_person_institutions')
    op.drop_index(op.f('ix_cared_person_institutions_id'), table_name='cared_person_institutions')
    op.drop_index(op.f('ix_cared_person_institutions_cared_person_id'), table_name='cared_person_institutions')
    op.drop_table('cared_person_institutions')
    op.drop_index(op.f('ix_billing_records_invoice_number'), table_name='billing_records')
    op.drop_index(op.f('ix_billing_records_id'), table_name='billing_records')
    op.drop_index(op.f('ix_billing_records_billing_type'), table_name='billing_records')
    op.drop_table('billing_records')
    op.drop_index(op.f('ix_user_roles_user_id'), table_name='user_roles')
    op.drop_index(op.f('ix_user_roles_role_id'), table_name='user_roles')
    op.drop_index(op.f('ix_user_roles_id'), table_name='user_roles')
    op.drop_table('user_roles')
    op.drop_index(op.f('ix_user_packages_id'), table_name='user_packages')
    op.drop_table('user_packages')
    op.drop_index(op.f('ix_service_subscriptions_subscription_type'), table_name='service_subscriptions')
    op.drop_index(op.f('ix_service_subscriptions_service_name'), table_name='service_subscriptions')
    op.drop_index(op.f('ix_service_subscriptions_id'), table_name='service_subscriptions')
    op.drop_table('service_subscriptions')
    op.drop_index(op.f('ix_caregiver_scores_id'), table_name='caregiver_scores')
    op.drop_index(op.f('ix_caregiver_scores_caregiver_id'), table_name='caregiver_scores')
    op.drop_table('caregiver_scores')
    op.drop_index(op.f('ix_caregiver_institutions_institution_id'), table_name='caregiver_institutions')
    op.drop_index(op.f('ix_caregiver_institutions_id'), table_name='caregiver_institutions')
    op.drop_index(op.f('ix_caregiver_institutions_caregiver_id'), table_name='caregiver_institutions')
    op.drop_table('caregiver_institutions')
    op.drop_index(op.f('ix_cared_persons_id'), table_name='cared_persons')
    op.drop_table('cared_persons')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_referral_commissions_id'), table_name='referral_commissions')
    op.drop_table('referral_commissions')
    op.drop_index(op.f('ix_institution_scores_institution_id'), table_name='institution_scores')
    op.drop_index(op.f('ix_institution_scores_id'), table_name='institution_scores')
    op.drop_table('institution_scores')
    op.drop_index(op.f('ix_emergency_protocols_protocol_type'), table_name='emergency_protocols')
    op.drop_index(op.f('ix_emergency_protocols_name'), table_name='emergency_protocols')
    op.drop_index(op.f('ix_emergency_protocols_id'), table_name='emergency_protocols')
    op.drop_index(op.f('ix_emergency_protocols_crisis_type'), table_name='emergency_protocols')
    op.drop_table('emergency_protocols')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_referrals_referral_code'), table_name='referrals')
    op.drop_index(op.f('ix_referrals_id'), table_name='referrals')
    op.drop_table('referrals')
    op.drop_index(op.f('ix_packages_package_type'), table_name='packages')
    op.drop_index(op.f('ix_packages_name'), table_name='packages')
    op.drop_index(op.f('ix_packages_id'), table_name='packages')
    op.drop_table('packages')
    op.drop_index(op.f('ix_package_add_ons_name'), table_name='package_add_ons')
    op.drop_index(op.f('ix_package_add_ons_id'), table_name='package_add_ons')
    op.drop_index(op.f('ix_package_add_ons_add_on_type'), table_name='package_add_ons')
    op.drop_table('package_add_ons')
    op.drop_index(op.f('ix_institutions_name'), table_name='institutions')
    op.drop_index(op.f('ix_institutions_institution_type'), table_name='institutions')
    op.drop_index(op.f('ix_institutions_id'), table_name='institutions')
    op.drop_table('institutions')
    # ### end Alembic commands ###
