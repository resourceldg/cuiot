"""add_care_type_and_referral_system

Revision ID: a029f1d4890d
Revises: fb2e98001afa
Create Date: 2025-06-30 02:43:16.553910

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a029f1d4890d'
down_revision: Union[str, None] = 'fb2e98001afa'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('referrals',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('referral_code', sa.String(length=20), nullable=False),
    sa.Column('referrer_type', sa.String(length=20), nullable=False),
    sa.Column('referrer_id', sa.UUID(), nullable=False),
    sa.Column('referred_email', sa.String(length=100), nullable=False),
    sa.Column('referred_name', sa.String(length=100), nullable=True),
    sa.Column('referred_phone', sa.String(length=20), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('registered_at', sa.DateTime(), nullable=True),
    sa.Column('converted_at', sa.DateTime(), nullable=True),
    sa.Column('expired_at', sa.DateTime(), nullable=True),
    sa.Column('commission_amount', sa.Float(), nullable=True),
    sa.Column('commission_paid', sa.Boolean(), nullable=True),
    sa.Column('commission_paid_at', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_referrals_id'), 'referrals', ['id'], unique=False)
    op.create_index(op.f('ix_referrals_referral_code'), 'referrals', ['referral_code'], unique=True)
    op.create_table('institution_scores',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=False),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('service_score', sa.Float(), nullable=True),
    sa.Column('infrastructure_score', sa.Float(), nullable=True),
    sa.Column('compliance_score', sa.Float(), nullable=True),
    sa.Column('reputation_score', sa.Float(), nullable=True),
    sa.Column('total_reviews', sa.Integer(), nullable=False),
    sa.Column('total_recommendations', sa.Integer(), nullable=False),
    sa.Column('total_patients', sa.Integer(), nullable=False),
    sa.Column('years_operating', sa.Integer(), nullable=True),
    sa.Column('staff_ratio', sa.Float(), nullable=True),
    sa.Column('response_time', sa.Integer(), nullable=True),
    sa.Column('safety_incidents', sa.Integer(), nullable=False),
    sa.Column('satisfaction_rate', sa.Float(), nullable=True),
    sa.Column('has_medical_license', sa.Boolean(), nullable=False),
    sa.Column('has_safety_certification', sa.Boolean(), nullable=False),
    sa.Column('has_quality_certification', sa.Boolean(), nullable=False),
    sa.Column('last_inspection_date', sa.Date(), nullable=True),
    sa.Column('inspection_score', sa.Float(), nullable=True),
    sa.Column('last_calculated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_review', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_institution_scores_id'), 'institution_scores', ['id'], unique=False)
    op.create_index(op.f('ix_institution_scores_institution_id'), 'institution_scores', ['institution_id'], unique=False)
    op.create_table('referral_commissions',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('referral_id', sa.UUID(), nullable=False),
    sa.Column('recipient_type', sa.String(length=20), nullable=False),
    sa.Column('recipient_id', sa.UUID(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('commission_type', sa.String(length=20), nullable=False),
    sa.Column('percentage', sa.Float(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['referral_id'], ['referrals.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_referral_commissions_id'), 'referral_commissions', ['id'], unique=False)
    op.create_table('caregiver_scores',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('caregiver_id', sa.UUID(), nullable=False),
    sa.Column('overall_score', sa.Float(), nullable=True),
    sa.Column('experience_score', sa.Float(), nullable=True),
    sa.Column('quality_score', sa.Float(), nullable=True),
    sa.Column('reliability_score', sa.Float(), nullable=True),
    sa.Column('availability_score', sa.Float(), nullable=True),
    sa.Column('total_reviews', sa.Integer(), nullable=False),
    sa.Column('total_recommendations', sa.Integer(), nullable=False),
    sa.Column('total_services', sa.Integer(), nullable=False),
    sa.Column('total_hours', sa.Integer(), nullable=False),
    sa.Column('avg_response_time', sa.Integer(), nullable=True),
    sa.Column('punctuality_rate', sa.Float(), nullable=True),
    sa.Column('completion_rate', sa.Float(), nullable=True),
    sa.Column('is_identity_verified', sa.Boolean(), nullable=False),
    sa.Column('is_background_checked', sa.Boolean(), nullable=False),
    sa.Column('is_references_verified', sa.Boolean(), nullable=False),
    sa.Column('last_calculated', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_review', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['caregiver_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_caregiver_scores_caregiver_id'), 'caregiver_scores', ['caregiver_id'], unique=False)
    op.create_index(op.f('ix_caregiver_scores_id'), 'caregiver_scores', ['id'], unique=False)
    op.create_table('cared_person_institutions',
    sa.Column('cared_person_id', sa.UUID(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=False),
    sa.Column('service_type', sa.String(length=50), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('schedule', sa.Text(), nullable=True),
    sa.Column('frequency', sa.String(length=50), nullable=True),
    sa.Column('duration_hours', sa.Float(), nullable=True),
    sa.Column('cost_per_session', sa.Integer(), nullable=True),
    sa.Column('payment_frequency', sa.String(length=50), nullable=True),
    sa.Column('insurance_coverage', sa.Boolean(), nullable=False),
    sa.Column('insurance_provider', sa.String(length=100), nullable=True),
    sa.Column('primary_doctor', sa.String(length=100), nullable=True),
    sa.Column('medical_notes', sa.Text(), nullable=True),
    sa.Column('treatment_plan', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('is_primary', sa.Boolean(), nullable=False),
    sa.Column('registered_by', sa.UUID(), nullable=True),
    sa.Column('registered_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['registered_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cared_person_institutions_cared_person_id'), 'cared_person_institutions', ['cared_person_id'], unique=False)
    op.create_index(op.f('ix_cared_person_institutions_id'), 'cared_person_institutions', ['id'], unique=False)
    op.create_index(op.f('ix_cared_person_institutions_institution_id'), 'cared_person_institutions', ['institution_id'], unique=False)
    op.create_table('caregiver_reviews',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('caregiver_id', sa.UUID(), nullable=False),
    sa.Column('reviewer_id', sa.UUID(), nullable=False),
    sa.Column('cared_person_id', sa.UUID(), nullable=True),
    sa.Column('caregiver_score_id', sa.UUID(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('categories', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_recommended', sa.Boolean(), nullable=False),
    sa.Column('service_date', sa.Date(), nullable=True),
    sa.Column('service_hours', sa.Float(), nullable=True),
    sa.Column('service_type', sa.String(length=50), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['caregiver_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['caregiver_score_id'], ['caregiver_scores.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_caregiver_reviews_cared_person_id'), 'caregiver_reviews', ['cared_person_id'], unique=False)
    op.create_index(op.f('ix_caregiver_reviews_caregiver_id'), 'caregiver_reviews', ['caregiver_id'], unique=False)
    op.create_index(op.f('ix_caregiver_reviews_caregiver_score_id'), 'caregiver_reviews', ['caregiver_score_id'], unique=False)
    op.create_index(op.f('ix_caregiver_reviews_id'), 'caregiver_reviews', ['id'], unique=False)
    op.create_index(op.f('ix_caregiver_reviews_reviewer_id'), 'caregiver_reviews', ['reviewer_id'], unique=False)
    op.create_table('institution_reviews',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=False),
    sa.Column('reviewer_id', sa.UUID(), nullable=False),
    sa.Column('cared_person_id', sa.UUID(), nullable=True),
    sa.Column('institution_score_id', sa.UUID(), nullable=True),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('categories', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('is_recommended', sa.Boolean(), nullable=False),
    sa.Column('service_date', sa.Date(), nullable=True),
    sa.Column('service_type', sa.String(length=50), nullable=True),
    sa.Column('length_of_stay', sa.Integer(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('is_public', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['institution_score_id'], ['institution_scores.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_institution_reviews_cared_person_id'), 'institution_reviews', ['cared_person_id'], unique=False)
    op.create_index(op.f('ix_institution_reviews_id'), 'institution_reviews', ['id'], unique=False)
    op.create_index(op.f('ix_institution_reviews_institution_id'), 'institution_reviews', ['institution_id'], unique=False)
    op.create_index(op.f('ix_institution_reviews_institution_score_id'), 'institution_reviews', ['institution_score_id'], unique=False)
    op.create_index(op.f('ix_institution_reviews_reviewer_id'), 'institution_reviews', ['reviewer_id'], unique=False)
    op.add_column('cared_persons', sa.Column('care_type', sa.String(length=20), nullable=False))
    op.add_column('caregiver_assignments', sa.Column('special_requirements', sa.Text(), nullable=True))
    op.add_column('caregiver_assignments', sa.Column('hourly_rate', sa.Integer(), nullable=True))
    op.add_column('caregiver_assignments', sa.Column('payment_frequency', sa.String(length=50), nullable=True))
    op.add_column('caregiver_assignments', sa.Column('is_insured', sa.Boolean(), nullable=False))
    op.add_column('caregiver_assignments', sa.Column('insurance_provider', sa.String(length=100), nullable=True))
    op.add_column('caregiver_assignments', sa.Column('client_rating', sa.Integer(), nullable=True))
    op.add_column('caregiver_assignments', sa.Column('client_feedback', sa.Text(), nullable=True))
    op.add_column('caregiver_assignments', sa.Column('caregiver_self_rating', sa.Integer(), nullable=True))
    op.add_column('caregiver_assignments', sa.Column('caregiver_notes', sa.Text(), nullable=True))
    op.add_column('caregiver_assignments', sa.Column('primary_doctor', sa.String(length=100), nullable=True))
    op.add_column('caregiver_assignments', sa.Column('medical_contact', sa.String(length=100), nullable=True))
    op.add_column('caregiver_assignments', sa.Column('emergency_protocol', sa.Text(), nullable=True))
    op.add_column('caregiver_assignments', sa.Column('is_primary', sa.Boolean(), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('caregiver_assignments', 'is_primary')
    op.drop_column('caregiver_assignments', 'emergency_protocol')
    op.drop_column('caregiver_assignments', 'medical_contact')
    op.drop_column('caregiver_assignments', 'primary_doctor')
    op.drop_column('caregiver_assignments', 'caregiver_notes')
    op.drop_column('caregiver_assignments', 'caregiver_self_rating')
    op.drop_column('caregiver_assignments', 'client_feedback')
    op.drop_column('caregiver_assignments', 'client_rating')
    op.drop_column('caregiver_assignments', 'insurance_provider')
    op.drop_column('caregiver_assignments', 'is_insured')
    op.drop_column('caregiver_assignments', 'payment_frequency')
    op.drop_column('caregiver_assignments', 'hourly_rate')
    op.drop_column('caregiver_assignments', 'special_requirements')
    op.drop_column('cared_persons', 'care_type')
    op.drop_index(op.f('ix_institution_reviews_reviewer_id'), table_name='institution_reviews')
    op.drop_index(op.f('ix_institution_reviews_institution_score_id'), table_name='institution_reviews')
    op.drop_index(op.f('ix_institution_reviews_institution_id'), table_name='institution_reviews')
    op.drop_index(op.f('ix_institution_reviews_id'), table_name='institution_reviews')
    op.drop_index(op.f('ix_institution_reviews_cared_person_id'), table_name='institution_reviews')
    op.drop_table('institution_reviews')
    op.drop_index(op.f('ix_caregiver_reviews_reviewer_id'), table_name='caregiver_reviews')
    op.drop_index(op.f('ix_caregiver_reviews_id'), table_name='caregiver_reviews')
    op.drop_index(op.f('ix_caregiver_reviews_caregiver_score_id'), table_name='caregiver_reviews')
    op.drop_index(op.f('ix_caregiver_reviews_caregiver_id'), table_name='caregiver_reviews')
    op.drop_index(op.f('ix_caregiver_reviews_cared_person_id'), table_name='caregiver_reviews')
    op.drop_table('caregiver_reviews')
    op.drop_index(op.f('ix_cared_person_institutions_institution_id'), table_name='cared_person_institutions')
    op.drop_index(op.f('ix_cared_person_institutions_id'), table_name='cared_person_institutions')
    op.drop_index(op.f('ix_cared_person_institutions_cared_person_id'), table_name='cared_person_institutions')
    op.drop_table('cared_person_institutions')
    op.drop_index(op.f('ix_caregiver_scores_id'), table_name='caregiver_scores')
    op.drop_index(op.f('ix_caregiver_scores_caregiver_id'), table_name='caregiver_scores')
    op.drop_table('caregiver_scores')
    op.drop_index(op.f('ix_referral_commissions_id'), table_name='referral_commissions')
    op.drop_table('referral_commissions')
    op.drop_index(op.f('ix_institution_scores_institution_id'), table_name='institution_scores')
    op.drop_index(op.f('ix_institution_scores_id'), table_name='institution_scores')
    op.drop_table('institution_scores')
    op.drop_index(op.f('ix_referrals_referral_code'), table_name='referrals')
    op.drop_index(op.f('ix_referrals_id'), table_name='referrals')
    op.drop_table('referrals')
    # ### end Alembic commands ###
