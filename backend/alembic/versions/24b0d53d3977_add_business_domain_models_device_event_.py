"""Add business domain models: Device, Event, Alert, Reminder, etc.

Revision ID: 24b0d53d3977
Revises: 8e5ff0689767
Create Date: 2025-06-28 21:08:46.551232

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '24b0d53d3977'
down_revision: Union[str, None] = '8e5ff0689767'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('emergency_protocols',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('protocol_type', sa.String(length=50), nullable=False),
    sa.Column('crisis_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('steps', sa.Text(), nullable=True),
    sa.Column('contacts', sa.Text(), nullable=True),
    sa.Column('trigger_conditions', sa.Text(), nullable=True),
    sa.Column('severity_threshold', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_emergency_protocols_crisis_type'), 'emergency_protocols', ['crisis_type'], unique=False)
    op.create_index(op.f('ix_emergency_protocols_id'), 'emergency_protocols', ['id'], unique=False)
    op.create_index(op.f('ix_emergency_protocols_name'), 'emergency_protocols', ['name'], unique=False)
    op.create_index(op.f('ix_emergency_protocols_protocol_type'), 'emergency_protocols', ['protocol_type'], unique=False)
    op.create_table('service_subscriptions',
    sa.Column('subscription_type', sa.String(length=50), nullable=False),
    sa.Column('service_name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('features', sa.Text(), nullable=True),
    sa.Column('limitations', sa.Text(), nullable=True),
    sa.Column('price_per_month', sa.Integer(), nullable=True),
    sa.Column('price_per_year', sa.Integer(), nullable=True),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('auto_renew', sa.Boolean(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_service_subscriptions_id'), 'service_subscriptions', ['id'], unique=False)
    op.create_index(op.f('ix_service_subscriptions_service_name'), 'service_subscriptions', ['service_name'], unique=False)
    op.create_index(op.f('ix_service_subscriptions_subscription_type'), 'service_subscriptions', ['subscription_type'], unique=False)
    op.create_table('billing_records',
    sa.Column('invoice_number', sa.String(length=50), nullable=False),
    sa.Column('billing_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=False),
    sa.Column('currency', sa.String(length=3), nullable=False),
    sa.Column('tax_amount', sa.Integer(), nullable=False),
    sa.Column('total_amount', sa.Integer(), nullable=False),
    sa.Column('billing_date', sa.Date(), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('paid_date', sa.Date(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('payment_method', sa.String(length=50), nullable=True),
    sa.Column('transaction_id', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('service_subscription_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['service_subscription_id'], ['service_subscriptions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_billing_records_billing_type'), 'billing_records', ['billing_type'], unique=False)
    op.create_index(op.f('ix_billing_records_id'), 'billing_records', ['id'], unique=False)
    op.create_index(op.f('ix_billing_records_invoice_number'), 'billing_records', ['invoice_number'], unique=True)
    op.create_table('devices',
    sa.Column('device_id', sa.String(length=100), nullable=False),
    sa.Column('device_type', sa.String(length=50), nullable=False),
    sa.Column('model', sa.String(length=100), nullable=True),
    sa.Column('manufacturer', sa.String(length=100), nullable=True),
    sa.Column('serial_number', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('battery_level', sa.Integer(), nullable=True),
    sa.Column('signal_strength', sa.Integer(), nullable=True),
    sa.Column('last_seen', sa.DateTime(timezone=True), nullable=True),
    sa.Column('location_description', sa.Text(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('altitude', sa.Float(), nullable=True),
    sa.Column('settings', sa.Text(), nullable=True),
    sa.Column('firmware_version', sa.String(length=50), nullable=True),
    sa.Column('hardware_version', sa.String(length=50), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('cared_person_id', sa.Integer(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('serial_number')
    )
    op.create_index(op.f('ix_devices_device_id'), 'devices', ['device_id'], unique=True)
    op.create_index(op.f('ix_devices_device_type'), 'devices', ['device_type'], unique=False)
    op.create_index(op.f('ix_devices_id'), 'devices', ['id'], unique=False)
    op.create_table('geofences',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('geofence_type', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('center_latitude', sa.Float(), nullable=False),
    sa.Column('center_longitude', sa.Float(), nullable=False),
    sa.Column('radius', sa.Float(), nullable=True),
    sa.Column('polygon_coordinates', sa.Text(), nullable=True),
    sa.Column('trigger_action', sa.String(length=50), nullable=False),
    sa.Column('alert_message', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('days_of_week', sa.String(length=50), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('cared_person_id', sa.Integer(), nullable=True),
    sa.Column('institution_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_geofences_geofence_type'), 'geofences', ['geofence_type'], unique=False)
    op.create_index(op.f('ix_geofences_id'), 'geofences', ['id'], unique=False)
    op.create_index(op.f('ix_geofences_name'), 'geofences', ['name'], unique=False)
    op.create_table('reminders',
    sa.Column('reminder_type', sa.String(length=50), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('scheduled_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('due_date', sa.Date(), nullable=True),
    sa.Column('repeat_pattern', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('completed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('completed_by', sa.Integer(), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('is_important', sa.Boolean(), nullable=False),
    sa.Column('reminder_data', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('cared_person_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['completed_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_reminders_id'), 'reminders', ['id'], unique=False)
    op.create_index(op.f('ix_reminders_reminder_type'), 'reminders', ['reminder_type'], unique=False)
    op.create_table('debug_events',
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('event_subtype', sa.String(length=50), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('event_data', sa.Text(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('stack_trace', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('test_session', sa.String(length=100), nullable=True),
    sa.Column('environment', sa.String(length=50), nullable=True),
    sa.Column('event_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('cared_person_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_debug_events_event_subtype'), 'debug_events', ['event_subtype'], unique=False)
    op.create_index(op.f('ix_debug_events_event_type'), 'debug_events', ['event_type'], unique=False)
    op.create_index(op.f('ix_debug_events_id'), 'debug_events', ['id'], unique=False)
    op.create_table('device_configs',
    sa.Column('device_id', sa.Integer(), nullable=False),
    sa.Column('config_type', sa.String(length=50), nullable=False),
    sa.Column('config_name', sa.String(length=100), nullable=False),
    sa.Column('config_data', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('version', sa.String(length=20), nullable=True),
    sa.Column('applied_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('applied_by', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['applied_by'], ['users.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_device_configs_config_type'), 'device_configs', ['config_type'], unique=False)
    op.create_index(op.f('ix_device_configs_device_id'), 'device_configs', ['device_id'], unique=False)
    op.create_index(op.f('ix_device_configs_id'), 'device_configs', ['id'], unique=False)
    op.create_table('events',
    sa.Column('event_type', sa.String(length=50), nullable=False),
    sa.Column('event_subtype', sa.String(length=50), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('event_data', sa.Text(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('source', sa.String(length=100), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('altitude', sa.Float(), nullable=True),
    sa.Column('event_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('processed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('cared_person_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_events_event_subtype'), 'events', ['event_subtype'], unique=False)
    op.create_index(op.f('ix_events_event_type'), 'events', ['event_type'], unique=False)
    op.create_index(op.f('ix_events_id'), 'events', ['id'], unique=False)
    op.create_table('location_tracking',
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('altitude', sa.Float(), nullable=True),
    sa.Column('accuracy', sa.Float(), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('heading', sa.Float(), nullable=True),
    sa.Column('location_name', sa.String(length=200), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('place_type', sa.String(length=50), nullable=True),
    sa.Column('tracking_method', sa.String(length=50), nullable=True),
    sa.Column('battery_level', sa.Integer(), nullable=True),
    sa.Column('signal_strength', sa.Integer(), nullable=True),
    sa.Column('recorded_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('received_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('cared_person_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_location_tracking_id'), 'location_tracking', ['id'], unique=False)
    op.create_table('alerts',
    sa.Column('alert_type', sa.String(length=50), nullable=False),
    sa.Column('alert_subtype', sa.String(length=50), nullable=True),
    sa.Column('severity', sa.String(length=20), nullable=False),
    sa.Column('title', sa.String(length=200), nullable=False),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('alert_data', sa.Text(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('acknowledged_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolved_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('priority', sa.Integer(), nullable=False),
    sa.Column('escalation_level', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('cared_person_id', sa.Integer(), nullable=True),
    sa.Column('device_id', sa.Integer(), nullable=True),
    sa.Column('event_id', sa.Integer(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], ),
    sa.ForeignKeyConstraint(['device_id'], ['devices.id'], ),
    sa.ForeignKeyConstraint(['event_id'], ['events.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_alerts_alert_subtype'), 'alerts', ['alert_subtype'], unique=False)
    op.create_index(op.f('ix_alerts_alert_type'), 'alerts', ['alert_type'], unique=False)
    op.create_index(op.f('ix_alerts_id'), 'alerts', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_alerts_id'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_alert_type'), table_name='alerts')
    op.drop_index(op.f('ix_alerts_alert_subtype'), table_name='alerts')
    op.drop_table('alerts')
    op.drop_index(op.f('ix_location_tracking_id'), table_name='location_tracking')
    op.drop_table('location_tracking')
    op.drop_index(op.f('ix_events_id'), table_name='events')
    op.drop_index(op.f('ix_events_event_type'), table_name='events')
    op.drop_index(op.f('ix_events_event_subtype'), table_name='events')
    op.drop_table('events')
    op.drop_index(op.f('ix_device_configs_id'), table_name='device_configs')
    op.drop_index(op.f('ix_device_configs_device_id'), table_name='device_configs')
    op.drop_index(op.f('ix_device_configs_config_type'), table_name='device_configs')
    op.drop_table('device_configs')
    op.drop_index(op.f('ix_debug_events_id'), table_name='debug_events')
    op.drop_index(op.f('ix_debug_events_event_type'), table_name='debug_events')
    op.drop_index(op.f('ix_debug_events_event_subtype'), table_name='debug_events')
    op.drop_table('debug_events')
    op.drop_index(op.f('ix_reminders_reminder_type'), table_name='reminders')
    op.drop_index(op.f('ix_reminders_id'), table_name='reminders')
    op.drop_table('reminders')
    op.drop_index(op.f('ix_geofences_name'), table_name='geofences')
    op.drop_index(op.f('ix_geofences_id'), table_name='geofences')
    op.drop_index(op.f('ix_geofences_geofence_type'), table_name='geofences')
    op.drop_table('geofences')
    op.drop_index(op.f('ix_devices_id'), table_name='devices')
    op.drop_index(op.f('ix_devices_device_type'), table_name='devices')
    op.drop_index(op.f('ix_devices_device_id'), table_name='devices')
    op.drop_table('devices')
    op.drop_index(op.f('ix_billing_records_invoice_number'), table_name='billing_records')
    op.drop_index(op.f('ix_billing_records_id'), table_name='billing_records')
    op.drop_index(op.f('ix_billing_records_billing_type'), table_name='billing_records')
    op.drop_table('billing_records')
    op.drop_index(op.f('ix_service_subscriptions_subscription_type'), table_name='service_subscriptions')
    op.drop_index(op.f('ix_service_subscriptions_service_name'), table_name='service_subscriptions')
    op.drop_index(op.f('ix_service_subscriptions_id'), table_name='service_subscriptions')
    op.drop_table('service_subscriptions')
    op.drop_index(op.f('ix_emergency_protocols_protocol_type'), table_name='emergency_protocols')
    op.drop_index(op.f('ix_emergency_protocols_name'), table_name='emergency_protocols')
    op.drop_index(op.f('ix_emergency_protocols_id'), table_name='emergency_protocols')
    op.drop_index(op.f('ix_emergency_protocols_crisis_type'), table_name='emergency_protocols')
    op.drop_table('emergency_protocols')
    # ### end Alembic commands ###
