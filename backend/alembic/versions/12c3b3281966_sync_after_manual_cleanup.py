"""sync after manual cleanup

Revision ID: 12c3b3281966
Revises: add_missing_columns
Create Date: 2025-07-04 10:05:53.039193

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '12c3b3281966'
down_revision: Union[str, None] = 'add_missing_columns'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('vital_signs')
    op.drop_table('service_details')
    op.drop_table('contact_information')
    op.drop_table('service_relationships')
    op.drop_table('enumeration_values')
    op.drop_table('assignment_details')
    op.drop_table('enumeration_types')
    op.drop_index('ix_audit_logs_id', table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_table('medication_administrations')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('medication_administrations',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('medication_schedule_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('shift_observation_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('scheduled_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('administered_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('confirmed_by', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('confirmation_method', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dosage_given', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_missed', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('side_effects', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('effectiveness_rating', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['confirmed_by'], ['users.id'], name='medication_administrations_confirmed_by_fkey'),
    sa.ForeignKeyConstraint(['medication_schedule_id'], ['medication_schedules.id'], name='medication_administrations_medication_schedule_id_fkey'),
    sa.ForeignKeyConstraint(['shift_observation_id'], ['shift_observations.id'], name='medication_administrations_shift_observation_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='medication_administrations_pkey')
    )
    op.create_table('audit_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('entity_type', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('entity_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('action', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('changed_by_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('old_data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('new_data', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['changed_by_id'], ['users.id'], name='audit_logs_changed_by_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='audit_logs_pkey')
    )
    op.create_index('ix_audit_logs_id', 'audit_logs', ['id'], unique=False)
    op.create_table('enumeration_types',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('type_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('is_system', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='enumeration_types_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('assignment_details',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('caregiver_assignment_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('schedule', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('responsibilities', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('special_requirements', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('hourly_rate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('payment_frequency', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_insured', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('insurance_provider', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('primary_doctor', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('medical_contact', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('emergency_protocol', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['caregiver_assignment_id'], ['caregiver_assignments.id'], name='assignment_details_caregiver_assignment_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='assignment_details_pkey')
    )
    op.create_table('enumeration_values',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('enumeration_type_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('label', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('sort_order', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('is_default', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('value_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['enumeration_type_id'], ['enumeration_types.id'], name='enumeration_values_enumeration_type_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='enumeration_values_pkey'),
    sa.UniqueConstraint('enumeration_type_id', 'value', name='enumeration_values_enumeration_type_id_value_key')
    )
    op.create_table('service_relationships',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cared_person_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('institution_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('service_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('start_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('end_date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_primary', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], name='service_relationships_cared_person_id_fkey'),
    sa.ForeignKeyConstraint(['institution_id'], ['institutions.id'], name='service_relationships_institution_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='service_relationships_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('contact_information',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('cared_person_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('contact_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('contact_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('contact_phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('contact_email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('relationship', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_primary', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['cared_person_id'], ['cared_persons.id'], name='contact_information_cared_person_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='contact_information_pkey')
    )
    op.create_table('service_details',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('service_relationship_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('schedule', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('frequency', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('duration_hours', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('cost_per_session', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('payment_frequency', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('insurance_coverage', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('insurance_provider', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('primary_doctor', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('medical_notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('treatment_plan', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['service_relationship_id'], ['service_relationships.id'], name='service_details_service_relationship_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='service_details_pkey')
    )
    op.create_table('vital_signs',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('shift_observation_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('blood_pressure_systolic', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('blood_pressure_diastolic', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('heart_rate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('temperature', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('oxygen_saturation', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('respiratory_rate', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('weight', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('height', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('bmi', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('measured_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), server_default=sa.text('true'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['shift_observation_id'], ['shift_observations.id'], name='vital_signs_shift_observation_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='vital_signs_pkey')
    )
    # ### end Alembic commands ###
